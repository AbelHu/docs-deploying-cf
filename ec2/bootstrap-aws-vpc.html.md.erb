
    </pre>

1. Use `bosh create release` to create a Cloud Foundry release.
This command prompts you for a development release name.

    <pre class="terminal">
    $ bosh create release
    </pre>

1. Use `bosh upload release` to upload the generated release to the BOSH
Director:

    <pre class="terminal">
    $ bosh upload release
    </pre>

1. Deploy the uploaded Cloud Foundry release:

    <pre class="terminal">
    $ bosh deploy
    </pre>

    <p class="note"><strong>Note</strong>: `bosh deploy` can take 2-3 hours to
	complete.</p>

1. Use `curl` to test the API endpoint of your Cloud Foundry installation.

    <pre class="terminal">
    $ curl api.subdomain.domain/info
    </pre>

    If `curl` succeeds, it should return the JSON-formatted information.
	If `curl` does not succeeds, check your networking and make sure your domain
	has an NS record for your subdomain.

1. You should be able to target your Cloud Foundry installation with the [cf Command Line Interface (CLI)](/devguide/installcf/index.html) and log in as an
administrator.

    The user name, `admin` and the password, `fakepassword`, are specified in
    the deployment manifest under **uaa:scim:users.

    For more information about managing organizations, spaces, users, and
    applications, refer to the [cf](/devguide/installcf/index.html) topic.

## <a id='updates'></a>Update Cloud Foundry##

* If you make change to your manifest, run `bosh deploy` to update your Cloud
Foundry deployment with these changes.

* If you make changes to the `cf-release` directory, run `bosh create release && bosh upload release && bosh deploy` to update your Cloud Foundry deployment with
these changes.

## <a id='deploy-cloudfoundry-services'></a>Deploy Cloud Foundry Services##

If you want your Cloud Foundry to be able to provision services, you must deploy
a services release. Refer to the [services documentation](/services/).

You also might be interested in the [community-managed services release](https://github.com/cloudfoundry/cf-services-contrib-release).

## <a id='destroy-environment'></a>Destroying the AWS Environment ##

1. Use `bosh aws destroy` to destroy your AWS environment.

    <table style="width: 60%;"><tr><td>
    **WARNING**: The command `bosh aws destroy` destroys everything in your AWS account, including all S3 buckets and all instances. Do not use this command unless you want to lose **everything** in your AWS account, including objects and files unrelated to your Cloud Foundry deployment.
    </td></tr></table>

	<pre class="terminal">
	$ bosh aws destroy
	</pre>

1. Remove any YAML artifacts:

    <pre class="terminal">
    $ rm -f *.yml
    </pre>