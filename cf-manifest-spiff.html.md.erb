---
title: Generating a Cloud Foundry Deployment Manifest Using Spiff
---

You need a deployment manifest to deploy Cloud Foundry.
This topic describes how to generate a Cloud Foundry deployment manifest using
[Spiff](https://github.com/cloudfoundry-incubator/spiff), a declarative YAML
templating system.

We recommend using [Spiff](https://github.com/cloudfoundry-incubator/spiff) to
generate Cloud Foundry deployment manifests.
Spiff produces a deployment manifest by merging environment-specific information
that you provide in a stub with the most current Cloud Foundry release
templates.

For more information on deploying Cloud Foundry, see [Deploying Distributed
Software with BOSH](../bosh/deploy-with-bosh.html).

##<a id="install-spiff"></a>Step 1: Install Spiff ##

Use one of the following methods to install Spiff.

###<a id="spiff-homebrew"></a>Install using Homebrew ###

1. Install [Homebrew](http://brew.sh/).

1. Use the `brew tap` command to add the Cloud Foundry tap to Homebrew.

    <pre class="terminal">
	$ brew tap xoebus/homebrew-cloudfoundry
    </pre>

1. Use the `brew install` command to install Spiff.

    <pre class="terminal">
    $ brew install spiff
    </pre>

###<a id="spiff-go"></a>Install using Go ###

1. Install [Go](https://golang.org/doc/install).

1. Set the $GOPATH environment variable.

    <pre class="terminal">
    $ export GOPATH=/usr/local/go
    </pre>

1. Add "$GOPATH/bin" to your PATH.

    <pre class="terminal">
    $ export PATH=$PATH:$GOPATH/bin
    </pre>

1. Use the `go get` command to install Spiff.

    <pre class="terminal">
    $ go get github.com/cloudfoundry-incubator/spiff
    </pre>

###<a id="spiff-exec"></a>Install the Precompiled Executable ###

1. Download a compressed file containing the Spiff precompiled binary from the
GitHub repository:
[https://github.com/cloudfoundry-incubator/spiff/releases](https://github.com/cloudfoundry-incubator/spiff/releases)

1. Extract the executable file from the downloaded compressed file.

1. Move the executable file to a location in your PATH or add the location of
the executable file to your PATH.

##<a id="clone-repo"></a>Step 2: Clone the Cloud Foundry Release Repository ##

Use the `git clone` command to make a local copy of the [Cloud Foundry release repository](https://github.com/cloudfoundry/cf-release).
This repository contains files you need to complete the remaining steps.

<pre class="terminal">
$ git clone git@github.com:cloudfoundry/cf-release
</pre>

##<a id="create-stub"></a>Step 3: Customize the Cloud Foundry Manifest Stub ##

Customize a deployment manifest stub with information specific to your
environment.
To do this:

1. Browse to the `cf-release/spec/fixtures` directory.
This directory contains folders for the following environments:
    * AWS
    * OpenStack
    * vSphere
    * Warden
<br /><br />
1. Open the folder corresponding to your IaaS.

1. Copy the `cf-stub.yml` file to the `cf-release` directory.

1. Edit your copy of `cf-stub.yml`.
Replace all of the values in this file with information specific to your
environment.
    * For instructions specific to AWS, see [Customizing the Cloud Foundry Deployment Manifest Stub for AWS](./cf-stub-aws.html).
    * For instructions specific to vSphere, see [Customizing the Cloud Foundry Deployment Manifest Stub for vSphere](./cf-stub-vsphere.html).
    * For instructions specific to vCloud, see [Customizing the Cloud Foundry Deployment Manifest Stub for vCloud](./cf-stub-vcloud.html).
    * For instructions specific to Openstack, see [Customizing the Cloud Foundry Deployment Manifest Stub for OpenStack](./cf-stub-openstack.html).

##<a id="generate-manifest"></a>Step 4: Generate a Deployment Manifest ##

Use [Spiff](https://github.com/cloudfoundry-incubator/spiff) to generate a
deployment manifest.
Spiff produces this manifest by merging your manifest stub with Cloud Foundry
release templates.

Run the following command from the `cf-release` directory to create a deployment
manifest named `cf-deployment.yml`:

`./generate_deployment_manifest INFRASTRUCTURE MANIFEST-STUB > 	cf-deployment.yml`.

In this command, replace `INFRASTRUCTURE` with `aws`, `openstack`, `vsphere`, or `warden`, and replace `MANIFEST-STUB` with the name and location of your `cf-stub.yml` file. For example:

<pre class="terminal">
$ ./generate_deployment_manifest aws cf-stub.yml > cf-deployment.yml
</pre>

The `generate_deployment_manifest` command uses Spiff to merge the contents of
your manifest stub with the following files in the `cf-release/templates`
directory:

* `cf-deployment.yml`
* `cf-jobs.yml`
* `cf-properties.yml`
* `cf-infrastructure-${infrastructure}.yml`

You can use the deployment manifest that this command generates to deploy Cloud
Foundry.
For more information on deploying Cloud Foundry, see [Deploying Distributed Software with BOSH](../bosh/deploy-with-bosh.html).
