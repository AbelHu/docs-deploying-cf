---
title: Deploying BOSH on AWS
---

This document shows how to create a BOSH deployment manifest and pass it to `bosh-init` to deploy BOSH into the Amazon Web Services (AWS) environment you created in the [previous step](./setup_aws.html).

## <a id="regenerate-keypair"></a>Step 1: Regenerate a Key Pair

1. From the **EC2 Dashboard**, select **Key Pairs**, select the key pair named `bosh`, and click **Delete**.

2. Click `Create Key Pair`. When prompted for the name, enter `bosh`. This will download the file `bosh.pem` into your Downloads directory. You need this Private Key file on your local machine to deploy BOSH.

3. Change the permissions on `bosh.pem` to user read-write access only.

    <pre class='terminal'>
    $ chmod 400 bosh.pem
    </pre>

4. Move `bosh.pem` into the `cf-example` directory you created in the [previous step](./setup_aws.html).

    <pre class='terminal'>
    $ mv ~/Downloads/bosh.pem ~/deployments/cf-example
    </pre>

## <a id="create-manifest"></a>Step 2: Create a Deployment Manifest

1. Create a deployment manifest file named `bosh.yml` in the deployment directory based on the template below.

    In the template, you must replace properties as follows:
    * `ELASTIC-IP`:In the **EC2 Dashboard** under **Elastic IPs**, use the Elastic IP with the Instance associated with `bosh`. Example: "52.9.107.126."
    * `SUBNET-ID`: In the **VPC Dashboard** tab **Subnets**, use the Subnet ID for the subnet named `bosh1`. Example: "subnet-2f58134a."
    * `AVAILABILITY-ZONE` and `REGION`: Use the values from the `bosh_environment` file you created in the [previous step](./setup_aws.html).
    * `ACCESS-KEY-ID` and `SECRET-ACCESS-KEY`: Use the values from your `bosh_environment` file.

    <p class="note"><strong>Note</strong>: The example below uses several predefined passwords. We recommend replacing them with passwords of your choice.</p>

<pre>
---
name: bosh

releases:
- name: bosh
  url: https://bosh.io/d/github.com/cloudfoundry/bosh?v=251
  sha1: 649fca64ac878476c6d68fc5e7ff86c2d879be16
- name: bosh-aws-cpi
  url: https://bosh.io/d/github.com/cloudfoundry-incubator/bosh-aws-cpi-release?v=43
  sha1: 38cba455cb5beeac5ee60b39f88b2af751655595

resource_pools:
- name: vms
  network: private
  stemcell:
    url: https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent?v=3012
    sha1: 3380b55948abe4c437dee97f67d2d8df4eec3fc1
  cloud_properties:
    instance_type: m3.xlarge
    ephemeral_disk: {size: 25_000, type: gp2}
    availability_zone: AVAILABILITY_ZONE # <--- Replace with Availability Zone

disk_pools:
- name: disks
  disk_size: 20_000
  cloud_properties: {type: gp2}

networks:
- name: private
  type: manual
  subnets:
  - range: 10.10.0.0/24
    gateway: 10.10.0.1
    dns: [10.10.0.2]
    cloud_properties: {subnet: SUBNET_ID} # <--- Replace with Subnet ID
- name: public
  type: vip

jobs:
- name: bosh
  instances: 1

  templates:
  - {name: nats, release: bosh}
  - {name: redis, release: bosh}
  - {name: postgres, release: bosh}
  - {name: blobstore, release: bosh}
  - {name: director, release: bosh}
  - {name: health_monitor, release: bosh}
  - {name: registry, release: bosh}
  - {name: aws_cpi, release: bosh-aws-cpi}

  resource_pool: vms
  persistent_disk_pool: disks

  networks:
  - name: private
    static_ips: [10.10.0.6]
    default: [dns, gateway]
  - name: public
    static_ips: [ELASTIC_IP] # <--- Replace with Elastic IP

  properties:
    nats:
      address: 127.0.0.1
      user: nats
      password: nats-password

    redis:
      listen_address: 127.0.0.1
      address: 127.0.0.1
      password: redis-password

    postgres: &db
      listen_address: 127.0.0.1
      host: 127.0.0.1
      user: postgres
      password: postgres-password
      database: bosh
      adapter: postgres

    registry:
      address: 10.10.0.6
      host: 10.10.0.6
      db: *db
      http: {user: admin, password: admin, port: 25777}
      username: admin
      password: admin
      port: 25777

    blobstore:
      address: 10.10.0.6
      port: 25250
      provider: dav
      director: {user: director, password: director-password}
      agent: {user: agent, password: agent-password}

    director:
      address: 127.0.0.1
      name: my-bosh
      db: *db
      cpi_job: aws_cpi
      max_threads: 10
      user_management:
        provider: local
        local:
          users:
          - {name: admin, password: admin}
          - {name: hm, password: hm-password}

    hm:
      director_account: {user: hm, password: hm-password}
      resurrector_enabled: true

    aws: &aws
      access_key_id: AWS_ACCESS_KEY # <--- Replace with AWS Access Key ID
      secret_access_key: AWS_SECRET_ACCESS_KEY # <--- Replace with AWS Secret Key
      default_key_name: bosh
      default_security_groups: [bosh]
      region: us-west-1

    agent: {mbus: "nats://nats:nats-password@10.10.0.6:4222"}

    ntp: &ntp [0.pool.ntp.org, 1.pool.ntp.org]

cloud_provider:
  template: {name: aws_cpi, release: bosh-aws-cpi}

  ssh_tunnel:
    host: ELASTIC_IP # <--- Replace with your Elastic IP address
    port: 22
    user: vcap
    private_key: ./bosh.pem # Path relative to this manifest file

  mbus: "https://mbus:mbus-password@ELASTIC_IP:6868" # <--- Replace with Elastic IP, retaining ":6868"

  properties:
    aws: *aws
    agent: {mbus: "https://mbus:mbus-password@0.0.0.0:6868"}
    blobstore: {provider: local, path: /var/vcap/micro_bosh/data/cache}
    ntp: *ntp

    </pre>
---
## <a id="deploy"></a> Step 3: Deploy

1. Check that [bosh-init](http://bosh.cloudfoundry.org/docs/install-bosh-init.html) and the [BOSH CLI](https://bosh.io/docs/bosh-cli.html) are installed on your machine.

1. Run `bosh-init deploy ./bosh.yml` to start the deployment process.

    <pre class='terminal'>
    $ bosh-init deploy ./bosh.yml
    ...
    </pre>

    See [AWS CPI errors](http://bosh.io/docs/aws-cpi.html#errors) for list of common errors and resolutions.

1. Use `bosh target ELASTIC-IP` to log into your new BOSH Director. The default username and password are `admin` and `admin`.

    <pre class="terminal">
    $ bosh target 54.175.20.129

    Target set to 'bosh'
    Your username: admin
    Enter password: *****
    Logged in as 'admin'

    $ bosh vms

    No deployments
    </pre>

1. Save the deployment state file left in your deployment directory so you can later update/delete your Director. See [Using bosh-init](http://bosh.io/docs/using-bosh-init.html#deployment-state) for more details.

For more information about deploying BOSH on AWS without running `bosh aws create` see [Initializing BOSH environment on AWS](http://bosh.io/docs/init-aws.html).

